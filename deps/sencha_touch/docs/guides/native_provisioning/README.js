Ext.data.JsonP.native_provisioning({"title":"Native iOS Provisioning","guide":"<h1>Creating an Apple iOS Development certificate in P12 format</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/native_provisioning-section-1'>On Mac OS</a></li>\n<li><a href='#!/guide/native_provisioning-section-2'>On Windows</a></li>\n</ol>\n</div>\n\n<p>Sencha SDK tools require a P12 certificate to package iOS applications. Obtaining a P12 certificate is a 2 step process.\nFirst: setup a development certificate on Apple iOS provisioning portal, and second: convert the development certificate\nto a P12 certificate.</p>\n\n<h2 id='native_provisioning-section-1'>On Mac OS</h2>\n\n<h3>Creating a developer certificate on iOS Provisioning Portal</h3>\n\n<p>If you have not created a development certificate on the Apple iOS Provisioning\nPortal, follow the steps outlined below to create the certificate:</p>\n\n<ol>\n<li>Navigate to the Certificates section of the portal</li>\n<li><p>Follow the steps on the portal to create a development certificate:</p>\n\n<p>How to create a development certificate:</p>\n\n<ol>\n<li><p>Generate a Certificate Signing Request (CSR) with a public key</p>\n\n<ul>\n<li>In your Applications folder, open the Utilities folder and launch Keychain Access.</li>\n<li>Choose Keychain Access > Certificate Assistant > Request a Certificate from a Certificate Authority.</li>\n<li>In the Certificate Information window, enter or select the following information:\n\n<ul>\n<li>In the User Email Address field, enter your email address</li>\n<li>In the Common Name field, enter your name</li>\n<li>In the Request is group, select the Saved to disk option</li>\n</ul>\n</li>\n<li>Click Continue.</li>\n<li>The Certificate Assistant saves a Certificate Signing Request (CSR) file to your Desktop.</li>\n<li>The public/private key pair will be generated when you create the Certificate Signing Request (CSR) if you use the Key Chain Assistant to create the CSR.</li>\n</ul>\n</li>\n<li><p>Submit the CSR through the Provisioning Portal.</p>\n\n<ul>\n<li>Click the Development tab</li>\n<li>Upload the certificate by choosing the file</li>\n<li>Click Submit</li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>After the certificate is generated, download the certificate and import it into Keychain:</p>\n\n<ul>\n<li>Open Keychain Access application (in the Applications/Utilities folder)</li>\n<li>Select File > Import and navigate to the certificate (.cer file) you just downloaded from the Apple iOS Provisioning Portal</li>\n</ul>\n</li>\n</ol>\n\n\n<h3>Exporting developer certificate into P12 format from Keychain</h3>\n\n<p>Once the developer certificate is imported into Keychain, you can export it to the P12 format:</p>\n\n<ol>\n<li>Open Keychain Access application (in the Applications/Utilities folder)</li>\n<li>Select the Keys Category</li>\n<li>Select the private key associated with your Apple iOS development certificate. The private key has the following name pattern: iPhone Developer: <code>&lt;First Name&gt;</code> <code>&lt;Last Name&gt;</code> public key reference</li>\n<li>Select File > Export Items... and save the key in the P12 format</li>\n<li>This file is what you specific in the Sencha SDK packager config file for the \"certificatePath\" variable.</li>\n</ol>\n\n\n<h2 id='native_provisioning-section-2'>On Windows</h2>\n\n<p>Pre-requisites:</p>\n\n<ul>\n<li>Install Open SSL (http://www.openssl.org/related/binaries.html)</li>\n<li>Open SSL requires Visual C++ 2008 Redistributables (VCRedist). Please follow the instructions on the above web page to download and install VCRedist if you do not have that on your system.</li>\n</ul>\n\n\n<h3>Creating a developer certificate on iOS Provisioning Portal</h3>\n\n<p>If you have not created a development certificate on the Apple iOS Provisioning Portal, follow the steps outlined below\nto create the certificate:</p>\n\n<ol>\n<li>Open a command prompt window</li>\n<li>Change directory to the OpenSSL bin directory</li>\n<li><p>Create a private key using openssl genrsa command:</p>\n\n<pre><code> openssl genrsa –out myprivatekey.key 2048\n</code></pre>\n\n<p> Note: Please keep this myprivatekey.key file. You will need this to generate the P12 certificate.</p></li>\n<li><p>Create a cerfiticate signing request (csr) using the following command:</p>\n\n<pre><code> openssl req –new –key myprivatekey.key –out CertificateSigningRequest.certSigningRequest –sub \"/\n emailAddress=yourAddress@example.com, CN=John Doe, C=US\"\n</code></pre>\n\n<p> Replace email address, CN (certificate name) and C (country) with your own values.</p></li>\n<li><p>Upload this CSR to the Apple iOS Provisioning Portal, in the Certificates section. You will need to associate this\ncertificate with the appropriate application provisioning profile.</p></li>\n</ol>\n\n\n<h3>Exporting developer certificate into P12 format from Keychain</h3>\n\n<p>Pre-requisite:</p>\n\n<ul>\n<li>iOS development certificate from the Apple iOS Provisioning Portal</li>\n<li>Private key file (e.g. myprivatekey.key) used to generate the development certificate</li>\n</ul>\n\n\n<p>Using the following steps to create the p12 file that combines the development\ncertificate with your private key:</p>\n\n<ol>\n<li>Download and save the development certificate (ios_development.cer) from the Apple iOS Provisioning Portal.</li>\n<li><p>Convert the development certificate into a PEM file using the following command:</p>\n\n<pre><code> openssl x509 –in ios_development.cer –inform DER –out ios_development.pem –outform PEM\n</code></pre></li>\n<li><p>Generate the P12 file:</p>\n\n<pre><code> openssl pkcs12 –export –inkey myprivatekey.key –in ios_development.pem –out ios_development.p12\n</code></pre></li>\n<li><p>This file is what you specific in the Sencha SDK packager config file for the \"certificatePath\" variable.</p></li>\n</ol>\n\n\n<p>If you have generated the development certificate (ios_development.cer) from a Mac before, you will need to use the\nprivate key from the Mac Keychain instead of the key (e.g. myprivatekey.key) generated using openssl. You can replace\nstep 3 above with the following steps:</p>\n\n<ol>\n<li>Export the private key as a P12 file (e.g. myprivatekey.p12) from the Keychain Access application from the Mac.</li>\n<li><p>Convert this key into a PEM key:</p>\n\n<pre><code> openssl pkcs12 –nocerts –in myprivatekey.p12 –out myprivatekey.pem\n</code></pre></li>\n<li><p>Generate the p12 file:</p>\n\n<pre><code> openssl pkcs12 –export –inkey myprivatekey.pem –in ios_development.pem –out ios_development.p12\n</code></pre></li>\n</ol>\n\n"});