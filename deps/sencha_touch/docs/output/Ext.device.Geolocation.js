Ext.data.JsonP.Ext_device_Geolocation({"code_type":"ext_define","meta":{"aside":[{"type":"guide","name":"native_apis"}]},"aliases":{},"component":false,"tagname":"class","extends":"Ext.Base","alternateClassNames":[],"inheritable":false,"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><strong>Ext.device.Geolocation</strong></div></div><h4>Mixins</h4><div class='dependency'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='docClass'>Ext.device.geolocation.Abstract</a></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Ext.device.Communicator' rel='Ext.device.Communicator' class='docClass'>Ext.device.Communicator</a></div><div class='dependency'><a href='#!/api/Ext.device.geolocation.Sencha' rel='Ext.device.geolocation.Sencha' class='docClass'>Ext.device.geolocation.Sencha</a></div><div class='dependency'><a href='#!/api/Ext.device.geolocation.Simulator' rel='Ext.device.geolocation.Simulator' class='docClass'>Ext.device.geolocation.Simulator</a></div><h4>Files</h4><div class='dependency'><a href='source/Geolocation2.html#Ext-device-Geolocation' target='_blank'>Geolocation.js</a></div></pre><div class='doc-contents'>            <div class='aside guide'>\n              <h4>Guide</h4>\n              <p><a href='#!/guide/native_apis'><img src='guides/native_apis/icon.png' alt=''> Using Native APIs</a></p>\n            </div>\n<p>Provides access to the native Geolocation API when running on a device. There are three implementations of this API:</p>\n\n<ul>\n<li>Sencha Packager</li>\n<li><a href=\"http://docs.phonegap.com/en/1.4.1/phonegap_device_device.md.html\">PhoneGap</a></li>\n<li>Browser</li>\n</ul>\n\n\n<p>This class will automatically select the correct implementation depending on the device your application is running on.</p>\n\n<h2>Examples</h2>\n\n<p>Getting the current location:</p>\n\n<pre><code><a href=\"#!/api/Ext.device.Geolocation-method-getCurrentPosition\" rel=\"Ext.device.Geolocation-method-getCurrentPosition\" class=\"docClass\">Ext.device.Geolocation.getCurrentPosition</a>({\n    success: function(position) {\n        console.log(position.coords);\n    },\n    failure: function() {\n        console.log('something went wrong!');\n    }\n});\n</code></pre>\n\n<p>Watching the current location:</p>\n\n<pre><code><a href=\"#!/api/Ext.device.Geolocation-method-watchPosition\" rel=\"Ext.device.Geolocation-method-watchPosition\" class=\"docClass\">Ext.device.Geolocation.watchPosition</a>({\n    frequency: 3000, // Update every 3 seconds\n    callback: function(position) {\n        console.log('Position updated!', position.coords);\n    },\n    failure: function() {\n        console.log('something went wrong!');\n    }\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-allowHighAccuracy' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-cfg-allowHighAccuracy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-cfg-allowHighAccuracy' class='name expandable'>allowHighAccuracy</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>True to allow high accuracy when getting the current position. ...</div><div class='long'><p>True to allow high accuracy when getting the current position.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-frequency' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-cfg-frequency' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-cfg-frequency' class='name expandable'>frequency</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>The default frequency to get the current position when using Ext.device.Geolocation.watchPosition. ...</div><div class='long'><p>The default frequency to get the current position when using <a href=\"#!/api/Ext.device.Geolocation-method-watchPosition\" rel=\"Ext.device.Geolocation-method-watchPosition\" class=\"docClass\">Ext.device.Geolocation.watchPosition</a>.</p>\n<p>Defaults to: <code>10000</code></p></div></div></div><div id='cfg-maximumAge' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-cfg-maximumAge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-cfg-maximumAge' class='name expandable'>maximumAge</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>This option indicates that the application is willing to accept cached location information whose age\nis no greater t...</div><div class='long'><p>This option indicates that the application is willing to accept cached location information whose age\nis no greater than the specified time in milliseconds. If maximumAge is set to 0, an attempt to retrieve\nnew location information is made immediately.</p>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='cfg-timeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-cfg-timeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-cfg-timeout' class='name not-expandable'>timeout</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>The maximum number of milliseconds allowed to elapse between a location update operation.</p>\n</div><div class='long'><p>The maximum number of milliseconds allowed to elapse between a location update operation.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-self' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); / dependentOL on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-callOverridden' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'><a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-clearWatch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-method-clearWatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-method-clearWatch' class='name expandable'>clearWatch</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>If you are currently watching for the current position, this will stop that task. ...</div><div class='long'><p>If you are currently watching for the current position, this will stop that task.</p>\n</div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href='#!/api/Ext.Component-method-destroy' rel='Ext.Component-method-destroy' class='docClass'>Ext.Component.destroy</a></p></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getCurrentConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getCurrentConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getCurrentConfig' class='name expandable'>getCurrentConfig</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getCurrentPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-method-getCurrentPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-method-getCurrentPosition' class='name expandable'>getCurrentPosition</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )</div><div class='description'><div class='short'>Attempts to get the current position of this device. ...</div><div class='long'><p>Attempts to get the current position of this device.</p>\n\n<pre><code><a href=\"#!/api/Ext.device.Geolocation-method-getCurrentPosition\" rel=\"Ext.device.Geolocation-method-getCurrentPosition\" class=\"docClass\">Ext.device.Geolocation.getCurrentPosition</a>({\n    success: function(position) {\n        console.log(position);\n    },\n    failure: function() {\n        <a href=\"#!/api/Ext.Msg-method-alert\" rel=\"Ext.Msg-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Geolocation', 'Something went wrong!');\n    }\n});\n</code></pre>\n\n<p><em>Note:</em> If you want to watch the current position, you could use <a href=\"#!/api/Ext.device.Geolocation-method-watchPosition\" rel=\"Ext.device.Geolocation-method-watchPosition\" class=\"docClass\">Ext.device.Geolocation.watchPosition</a> instead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>An object which contains the following config options:</p>\n<ul><li><span class='pre'>success</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The function to call when the location of the current device has been received.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>position</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></li><li><span class='pre'>failure</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The function that is called when something goes wrong.</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The scope of the <code>success</code> and <code>failure</code> functions.</p>\n</div></li><li><span class='pre'>maximumAge</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The maximum age of a cached location. If you do not enter a value for this, the value of <a href=\"#!/api/Ext.device.geolocation.Abstract-cfg-maximumAge\" rel=\"Ext.device.geolocation.Abstract-cfg-maximumAge\" class=\"docClass\">maximumAge</a>\nwill be used.</p>\n</div></li><li><span class='pre'>timeout</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The timeout for this request. If you do not specify a value, it will default to <a href=\"#!/api/Ext.device.geolocation.Abstract-cfg-timeout\" rel=\"Ext.device.geolocation.Abstract-cfg-timeout\" class=\"docClass\">timeout</a>.</p>\n</div></li><li><span class='pre'>allowHighAccuracy</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>True to enable allow accuracy detection of the location of the current device. If you do not specify a value, it will\ndefault to <a href=\"#!/api/Ext.device.geolocation.Abstract-cfg-allowHighAccuracy\" rel=\"Ext.device.geolocation.Abstract-cfg-allowHighAccuracy\" class=\"docClass\">allowHighAccuracy</a>.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> name]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed</div><div class='description'><div class='short'>Returns the initial configuration passed to constructor. ...</div><div class='long'><p>Returns the initial configuration passed to constructor.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>When supplied, value for particular configuration\noption is returned, otherwise the full config object is returned.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> instanceConfig</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instanceConfig</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>mixins The mixin prototypes as key - value pairs</p>\n</div></li></ul></div></div></div><div id='method-onConfigUpdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-onConfigUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' class='name expandable'>onConfigUpdate</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> names, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> callback, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config, <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> applyIfNotSet</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>applyIfNotSet</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-watchPosition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.device.geolocation.Abstract' rel='Ext.device.geolocation.Abstract' class='defined-in docClass'>Ext.device.geolocation.Abstract</a><br/><a href='source/Abstract9.html#Ext-device-geolocation-Abstract-method-watchPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.geolocation.Abstract-method-watchPosition' class='name expandable'>watchPosition</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config</span> )</div><div class='description'><div class='short'>Watches for the current position and calls the callback when successful depending on the specified frequency. ...</div><div class='long'><p>Watches for the current position and calls the callback when successful depending on the specified <a href=\"#!/api/Ext.device.geolocation.Abstract-cfg-frequency\" rel=\"Ext.device.geolocation.Abstract-cfg-frequency\" class=\"docClass\">frequency</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext.device.Geolocation-method-watchPosition\" rel=\"Ext.device.Geolocation-method-watchPosition\" class=\"docClass\">Ext.device.Geolocation.watchPosition</a>({\n    callback: function(position) {\n        console.log(position);\n    },\n    failure: function() {\n        <a href=\"#!/api/Ext.Msg-method-alert\" rel=\"Ext.Msg-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Geolocation', 'Something went wrong!');\n    }\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>An object which contains the following config options:</p>\n<ul><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The function to be called when the position has been updated.</p>\n</div></li><li><span class='pre'>failure</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The function that is called when something goes wrong.</p>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The scope of the <code>success</code> and <code>failure</code> functions.</p>\n</div></li><li><span class='pre'>frequency</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>The frequency in which to call the supplied callback. Defaults to <a href=\"#!/api/Ext.device.geolocation.Abstract-cfg-frequency\" rel=\"Ext.device.geolocation.Abstract-cfg-frequency\" class=\"docClass\">frequency</a> if you do not specify a value.</p>\n</div></li><li><span class='pre'>allowHighAccuracy</span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><div class='sub-desc'><p>True to enable allow accuracy detection of the location of the current device. If you do not specify a value, it will\ndefault to <a href=\"#!/api/Ext.device.geolocation.Abstract-cfg-allowHighAccuracy\" rel=\"Ext.device.geolocation.Abstract-cfg-allowHighAccuracy\" class=\"docClass\">allowHighAccuracy</a>.</p>\n</div></li></ul></div></li></ul></div></div></div></div></div></div></div>","mixedInto":[],"superclasses":["Ext.Base"],"singleton":true,"inheritdoc":null,"requires":["Ext.device.Communicator","Ext.device.geolocation.Sencha","Ext.device.geolocation.Simulator"],"members":{"css_var":[],"event":[],"css_mixin":[],"method":[{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"callOverridden","id":"method-callOverridden"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"callParent","id":"method-callParent"},{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"method","name":"clearWatch","id":"method-clearWatch"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"destroy","id":"method-destroy"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"getConfig","id":"method-getConfig"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"getCurrentConfig","id":"method-getCurrentConfig"},{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"method","name":"getCurrentPosition","id":"method-getCurrentPosition"},{"meta":{},"owner":"Ext.Base","tagname":"method","name":"getInitialConfig","id":"method-getInitialConfig"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"hasConfig","id":"method-hasConfig"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"initConfig","id":"method-initConfig"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"onConfigUpdate","id":"method-onConfigUpdate"},{"meta":{"private":true},"owner":"Ext.Base","tagname":"method","name":"setConfig","id":"method-setConfig"},{"meta":{"protected":true},"owner":"Ext.Base","tagname":"method","name":"statics","id":"method-statics"},{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"method","name":"watchPosition","id":"method-watchPosition"}],"cfg":[{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"cfg","name":"allowHighAccuracy","id":"cfg-allowHighAccuracy"},{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"cfg","name":"frequency","id":"cfg-frequency"},{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"cfg","name":"maximumAge","id":"cfg-maximumAge"},{"meta":{},"owner":"Ext.device.geolocation.Abstract","tagname":"cfg","name":"timeout","id":"cfg-timeout"}],"property":[{"meta":{"protected":true},"owner":"Ext.Base","tagname":"property","name":"self","id":"property-self"}]},"parentMixins":[],"statics":{"css_var":[],"event":[],"css_mixin":[],"cfg":[],"method":[],"property":[]},"subclasses":[],"name":"Ext.device.Geolocation","html_meta":{"aside":["            <div class='aside guide'>\n              <h4>Guide</h4>\n              <p><a href='#!/guide/native_apis'><img src='guides/native_apis/icon.png' alt=''> Using Native APIs</a></p>\n            </div>\n"]},"mixins":["Ext.device.geolocation.Abstract"],"id":"class-Ext.device.Geolocation","uses":[],"files":[{"href":"Geolocation2.html#Ext-device-Geolocation","filename":"Geolocation.js"}]});